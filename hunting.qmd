---
title: "Hunting Model 230 Final Assignment"
author: "Liz Peterson & Brooke Grazda"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(here)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(sensitivity)
library(purrr)
library(deSolve)
library(lhs)

```

```{r}
source(here('hunting.R'))
```



```{r}
# note the use of with
# initial conditions
currpop <- c(prey = 10, pred = 1)

# time points to see results
days <- seq(from = 1, to = 100, by = 1)

# set parameters
pars <- c(rprey = 0.95, alpha = 0.01, eff = 0.6, pmort = 0.4, K = 2000, beta = 0.5, hunters = 1, prey_thresh = 2)

# run the model
res <- ode(func = hunting, y = currpop, times = days, parms = pars)

# extract final values
final <- as.data.frame(res) |>  tail(1)
final

# Assuming that 5 is a stable level?
stability <- final$prey > 5 & final$pred > 5


# graph the results
head(res)
# rearrange for easy plotting
resl <- as.data.frame(res) %>% pivot_longer(-time, names_to = "animal", values_to = "pop")
p1 <- ggplot(resl, aes(time, pop, col = animal)) +
  geom_line()

p1

p2 <- ggplot(as.data.frame(res), aes(pred, prey)) +
  geom_point() +
  labs(y = "Prey", x = "Predators")
p2

# To make this easier to understand - maybe
p2b <- ggplot(as.data.frame(res), aes(pred, prey, col = time)) +
  geom_point() +
  labs(y = "Prey", x = "Predators")
p2b

ggpubr::ggarrange(p1, p2b)
```
Using the hunting model, we tested different hunting levels using the beta and hunters parameters. Each simulation was run for 100 days using the `ode()` function from the `deSolve` package, with a consistent set of initial conditions:

```{r}
currpop <- c(prey = 10, pred = 1)
```

We define stability as both prey and predator populations remaining above 5 individuals at the end of the simulation (t=100). This ensures that both species avoid extinction. We tested this to see at the 100th day, if the populations were stable.




